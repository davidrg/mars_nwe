This is the file "INSTALL", a step-by-step guide on how to install
the mars_nwe-package.

(1) Get a 'good' ipx-kernel-version and compile
    it with IPX-support, but no full internal net. You can do
    this by answering the following questions when running
    "make config":

       The IPX protocol (CONFIG_IPX) [N/m/y/?] y
       Full internal IPX network (CONFIG_IPX_INTERN) [N/y/?] n

    For general questions about how to compile a kernel,
    please see the Linux Kernel-HOWTO.
    Best kernels for mars_nwe are 1.3.57
    (with little patch from example directory)
    or kernels >= 1.3.60.
    Older kernels will sometimes not work because of
    bugs in the ipx-code. See examples directory for
    some patches.

(2) Decide, if mars_nwe should initialize your IPX-subsystem,
    make routing and handle sap/rip or if you want to do this
    with 3rd party products by hand.
    Before mailing problems with mars_nwe please try the first.

(2a) Configuration of the IPX-subsystem by "mars_nwe"

    You do not need any other ipx-tool or routers/daemons
    in this case.
    It was tested that "mars_nwe", "dosemu", "ncpfs" or
    Caldera's "nwclient" do coexist friendly in this case.


    Set INTERNAL_RIP_SAP to "1" in `mars_nwe/config.h':

    #define INTERNAL_RIP_SAP  1


    If you have other IPX/NCP servers on your local net you
    can let "mars_nwe" choose TRV ("the right values"(tm))
    for you.
    You request this with the following entries in `nwserv.conf':

    3  0x0                 # use your IP number for internal net.
    4  0x0  *      AUTO    # autocreat Interfaces

    Make sure that no other server is using your internal net number
    as it's networknumber.

    If there is no other IPX/NCP Server on your net then the network-
    number from section '4' can be any number.

    4  0x10 eth0 ethernet_ii  # eth0 device with network number '0x10'
                              # and frame ETHERNET_II.
    4  0x20 eth0 802.3        # eth0 device with network number '0x20'
                              # und frame ETHERNET_802.3.


(2b) Manual configuration of the IPX-subsystem

    In this mode you must use tools like ipx-configure and
    ipxd to configure ipx-interfaces, routes and handle rip/sap.

    Set INTERNAL_RIP_SAP to "0" in `mars_nwe/config.h':

    #define INTERNAL_RIP_SAP  0


(3) Compile the programs from the mars_nwe-package

    Unpack the source of "mars_nwe" and change to the directory
    `mars_nwe' (you already did that, otherwise you won't read this).
    Enter the command:

       make

    This will create the file `config.h' and 'mk.li'.
    Edit them to suit your needs. 'mk.li" only needs to be altered under
    very rare conditions or if you have problems with compiling/linking
    this package.

    Now run "make" again:

       make


(4) Edit the configuration-file `nw.ini'.

    Make sure you have all required sections included in your old
    configuration-file, if you upgrade to a new version of "mars_nwe".


(5) Install everything

    Just say

       make install
    and perhaps
       make install_ini

    The later is only if you want to _overwrite_ the already installed
    versions of the configuration-file "nwserv.conf" by the "nw.ini" file.


(6) Create the directories visible to DOS-clients

    At least the volume "SYS" must be defined in the configuration-file
    "nwserv.conf". Create the associated directory if it does not
    already exists and place the programs "login.exe" and "slist.exe"
    into the "LOGIN" directory. You also can use the free mars_dosutils
    with a poor version of these programms.

(7) Fire it up

    As root, execute the command

       nwserv


(8) Stop programs (server down)

    If nwserv isn't daemonized, then the server can be stopped
    with ^C, otherwise the server must be shut down with a
    kill of nwserv or with starting 'nwserv -k' or with the
    right dos client programm (fconsole server down) as supervisor.
    Entry 210 in the nw.ini file gives the time in seconds, before
    the server really shuts down.


good luck  :-)

Martin Stover <mstover@stover.f.eunet.de>


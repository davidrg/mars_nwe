#if 0
#makefile.unx 10-Feb-96
#endif

VPATH=$(V_VPATH)

O=.o
C=.c

V_H=0
V_L=96
P_L=9
#define D_P_L 1
DISTRIB=mars_nwe
#if D_P_L
DISTRIBF=$(DISTRIB)-$(V_H).$(V_L).pl$(P_L)
PATCHF=$(DISTRIBF)
#else
P_L=0
DISTRIBF=$(DISTRIB)-$(V_H).$(V_L)
PATCHF=$(DISTRIBF).pl$(P_L)
#endif
STERN=*

#if 0
DESTMAKEFILE=Makefile.o
all:    $(DESTMAKEFILE)
	$(MAKE) -f $(DESTMAKEFILE) n_$@

clean:  $(DESTMAKEFILE)
	$(MAKE) -f $(DESTMAKEFILE) n_$@

distclean:  $(DESTMAKEFILE)
	$(MAKE) -f $(DESTMAKEFILE) n_$@

install:  $(DESTMAKEFILE)
	$(MAKE) -f $(DESTMAKEFILE) n_$@

install_ini:  $(DESTMAKEFILE)
	$(MAKE) -f $(DESTMAKEFILE) n_$@

diff:   $(DESTMAKEFILE)
	$(MAKE) -f $(DESTMAKEFILE) n_$@

distrib:  $(DESTMAKEFILE)
	$(MAKE) -f $(DESTMAKEFILE) n_$@

distrib_bin:  $(DESTMAKEFILE)
	$(MAKE) -f $(DESTMAKEFILE) n_$@

$(DESTMAKEFILE): $(VPATH)/makefile.unx $(VPATH)/config.h
	rm -f $@
	cp $(VPATH)/makefile.unx makefile.c
	$(CPP) $(HOSTCFLAGS) -I$(VPATH) makefile.c > $@
	rm -f makefile.c
#endif


PROG1=
PROG2=nwserv
PROG3=nwconn
PROG4=ncpserv
PROG5=nwclient

#include "config.h"
#ifdef FILENAME_NW_INI
M_FILENAME_NW_INI=FILENAME_NW_INI
#else
M_FILENAME_NW_INI="./nw.ini"
#endif

#ifdef PATHNAME_PROGS
M_PATHNAME_PROGS=PATHNAME_PROGS
#else
M_PATHNAME_PROGS="."
#endif

#ifndef INTERNAL_RIP_SAP
#define INTERNAL_RIP_SAP  1
#endif

#ifdef  LINUX
EMUTLIOBJ=emutli$(O)
# if INTERNAL_RIP_SAP
NWROUTE_O=nwroute$(O)
# else
NWROUTE_O=nwroute1$(O)
# endif
#else
NWROUTE_O=nwroute1$(O)
#endif

PROGS=$(PROG1) $(PROG2) $(PROG3) $(PROG4) $(PROG5)

OBJ1= $(EMUTLIOBJ) net1$(O) tools$(O)
OBJ2= $(OBJ1) $(NWROUTE_O)
OBJ3= $(OBJ1) connect$(O) namspace$(O) nwvolume$(O) nwfile$(O)
OBJ4= $(OBJ1) nwdbm$(O) nwcrypt$(O)
OBJ5= $(OBJ1)

OBJS= net1$(O) tools$(O) connect$(O) nwdbm$(O) $(NWROUTE_O) \
      namspace$(O) nwvolume$(O) \
      $(PROG2)$(O) $(PROG3)$(O) $(PROG4)$(O) $(PROG5)$(O)

HOBJ3= $(PROG3)$(O) connect$(O) namspace$(O) nwvolume$(O) nwfile$(O)

#if 0
#$(PROG1):  $(PROG1)$(O) $(OBJ1)
#	   $(CC) -o $(VPATH)/$(PROG1) $(PROG1)$(O) $(OBJ1) $(NSLLIB)
#endif

$(PROG2):  $(PROG2)$(O) $(OBJ2)
	   $(CC) -o $(VPATH)/$(PROG2) $(PROG2)$(O) $(OBJ2) $(NSLLIB)
#if 0
#$(CC) -o $(VPATH)/$(PROG2) $(PROG2)$(O) $(OBJ2) $(NDBMLIB) $(NSLLIB)
#endif

$(PROG3):  $(PROG3)$(O) $(OBJ3)
	   $(CC) -o $(VPATH)/$(PROG3) $(PROG3)$(O) $(OBJ3)  $(NSLLIB)

$(PROG4):  $(PROG4)$(O) $(OBJ4)
	   $(CC) -o $(VPATH)/$(PROG4) $(PROG4)$(O) $(OBJ4) $(NDBMLIB) $(CRYPTLIB) $(NSLLIB)

$(PROG5):  $(PROG5)$(O) $(OBJ5)
	   $(CC) -o $(VPATH)/$(PROG5) $(PROG5)$(O) $(OBJ5) $(NSLLIB)

$(HOBJ3):  namspace.h connect.h nwvolume.h nwfile.h
$(OBJS):   net.h config.h

$(C)$(O):
	$(CC) -c $(CFLAGS) $(HOSTCFLAGS) \
 -D_VERS_H_=$(V_H) -D_VERS_L_=$(V_L) -D_VERS_P_=$(P_L) $<

n_all:   $(PROGS)

n_install_ini:
	 cd $(VPATH) && $(INSTALL) -m 664 nw.ini $(M_FILENAME_NW_INI) && cd $(OBJDIR)

n_install:
	cd $(VPATH)  && $(INSTALL) -d $(M_PATHNAME_PROGS) && cd $(OBJDIR)
	cd $(VPATH)  && $(INSTALL) $(PROGS) $(M_PATHNAME_PROGS) && cd $(OBJDIR)
	@cd $(VPATH) && (if [ -r $(M_FILENAME_NW_INI) ] ; then \
echo ""; \
echo "********************************************************"; \
echo ""; \
echo "$(M_FILENAME_NW_INI) exist."; \
echo "to overwrite it with nw.ini, make install_ini";\
echo ""; \
echo "********************************************************"; \
echo ""; \
else \
$(INSTALL) -m 664 nw.ini $(M_FILENAME_NW_INI); \
echo ""; \
echo "********************************************************"; \
echo ""; \
echo "$(M_FILENAME_NW_INI) created from nw.ini"; \
echo ""; \
echo "********************************************************"; \
echo ""; \
fi; cd $(OBJDIR) )

n_clean1:
	cd $(VPATH) && (rm -f ~* examples/~* examples/.e.pck; cd $(OBJDIR))

n_clean: n_clean1
	rm -f *.o
	cd $(VPATH) && (rm -f $(PROGS); cd $(OBJDIR) )

n_distclean: n_clean
	cd $(VPATH) && (rm -f *.dir *.pag; cd $(OBJDIR))

n_make_dir: n_clean1
	cd $(VPATH) && (rm -rf $(OBJDIR)/$(VPATH)/$(DISTRIB) \
; mkdir $(DISTRIB) \
; mkdir $(DISTRIB)/examples \
; ln -f  \
 $(STERN).[ch] \
 makefile.unx \
 Makefile \
 COPYING  \
 NEWS  \
 CHANGES  \
 README  \
 README.ger \
 INSTALL  \
 INSTALL.ger  \
 $(DISTRIB).lsm \
 $(DISTRIB)/. \
; rm -f  $(DISTRIB)/config.h \
; ln -f  \
 examples/$(STERN) \
 $(DISTRIB)/examples/. \
; cd $(OBJDIR) )

n_diff: n_make_dir
	cd $(VPATH) && ( \
 makepatch $(DISTRIB).org $(DISTRIB) > $(PATCHF) \
; gzip -9 -f $(PATCHF) \
; cd $(OBJDIR) )

n_distrib: n_diff
	-mkdir /tmp/x
	cd $(VPATH) && (tar cvzf $(DISTRIBF).tgz $(DISTRIB) \
; uue $(DISTRIBF).tgz; mv -f $(DISTRIB)-$(V_H).uue $(DISTRIBF).uue \
; cp -a $(DISTRIB)/$(DISTRIB).lsm /tmp/yy \
; echo "" >> /tmp/yy \
; echo "" >> /tmp/yy \
; cat $(DISTRIBF).uue >> /tmp/yy \
; chmod 664 /tmp/yy \
; rm  $(DISTRIBF).uue \
; mv  $(DISTRIBF).tgz /tmp/x/. \
; cp -a $(DISTRIB)/$(DISTRIB).lsm /tmp/x/. \
; cd $(OBJDIR) )

n_distrib_bin:
	cd $(VPATH) && (tar cvzf /tmp/$(DISTRIB).bin.tgz \
 $(PROGS) \
 COPYING  \
 INSTALL  \
 INSTALL.ger  \
 NEWS  \
 CHANGES  \
 README   \
 README.ger   \
 $(DISTRIB).lsm \
 examples \
; cd $(OBJDIR))


